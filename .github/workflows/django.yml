name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/prod.txt
    - name: Run Tests
      env:
        DJANGO_SECRET_KEY: ${{ secrets.SECRET_KEY }}
        POSTGRES_PASSWORD: postgres
        DATABASE_HOST: localhost
      run: |
        python -m coverage manage.py test project
        COVERAGE_RESULT=`python -m coverage report | grep TOTAL | awk 'N=1 {print $NF}' | sed 's/%//g'`
        MIN_COVERAGE=10
        if [[ $COVERAGE_RESULT -gt $MIN_COVERAGE ]]; then
            echo ::set-output name=coverage_result::$COVERAGE_RESULT
        else
            echo "#################################################"
            echo "Code coverage below allowed threshold ($COVERAGE_RESULT<$MIN_COVERAGE)"
            python -m coverage report
            exit 1
        fi

        echo "#################################################"
        echo "Completed ${GITHUB_WORKFLOW}:${GITHUB_ACTION}"

